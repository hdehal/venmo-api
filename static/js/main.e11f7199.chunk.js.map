{"version":3,"sources":["i18n.js","components/receipts.js","App.js","index.js"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","en","translations","heading","intro","paid","de","fr","jp","fallbackLng","load","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","prices","rates","USD","EUR","JPY","GBP","symbols","emojis","updatePrices","rate","elements","document","getElementsByClassName","forEach","price","index","innerHTML","toFixed","updateSymbols","symbol","insertAdjacentHTML","Receipts","props","state","handleChange","bind","test","navigator","userAgent","emoji","updateEmoji","e","target","value","this","setState","t","id","className","Row","ListGroup","horizontal","onClick","Item","action","receipts","map","receipt","i","Card","style","key","Subtitle","actor","firstname","transactions","Body","message","Component","withTranslation","App","loading","fetch","then","res","json","data","slice","catch","err","console","log","currentLang","Array","isArray","languages","changeLanguage","lng","Container","fluid","Col","Trans","i18nKey","href","rel","Spinner","animation","role","variant","React","ReactDOM","render","I18nextProvider","getElementById"],"mappings":"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","file":"static/js/main.e11f7199.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    .use(initReactI18next)\n    .use(LanguageDetector)\n    .init({\n        resources: {\n            en: {\n                translations: {\n                    heading: \"Latest Venmo Transactions\",\n                    intro: \"This simple React demo app uses Venmo API data as a test playground for currency conversion, internationalization (i18n), and accessibility (a11y).\",\n                    paid: \"paid\"\n                }\n            },\n            de: {\n                translations: {\n                    heading: \"Neueste Venmo Transaktionen\",\n                    intro: \"Diese einfache React-App verwendet Venmo-API-Daten als Testspielplatz für Währungsumrechnung, Internationalisierung (i18n) und Barrierefreiheit (a11y).\",\n                    paid: \"bezahlt\"\n                }\n            },\n            fr: {\n                translations: {\n                    heading: \"Dernières Transactions Venmo\",\n                    intro: \"Cette application React utilise les données de l'API Venmo comme terrain de jeu pour la conversion de devises, l'internationalisation (i18n) et l'accessibilité (a11y).\",\n                    paid: \"payé\"\n                }\n            },\n            jp: {\n                translations: {\n                    heading: \"最新のVenmoトランザクション\",\n                    intro: \"このシンプルなReactアプリは、通貨変換、国際化（i18n）、およびアクセシビリティ（a11y）のテストの遊び場としてVenmo APIデータを使用します。\",\n                    paid: \"支払った\"\n                }\n            }\n        },\n        fallbackLng: 'en',\n        load: 'languageOnly',\n        debug: false,\n\n        // Common namespace used around the full app\n        ns: ['translations'],\n        defaultNS: 'translations',\n\n        keySeparator: false, // Content as keys\n\n        interpolation: {\n            escapeValue: false, // Not needed for React\n            formatSeparator: ','\n        },\n\n        react: {\n            wait: true\n        }\n    });\n\nexport default i18n;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { withTranslation } from \"react-i18next\";\n\nvar prices = [140, 84.99, 10, 140, 500, 2400, 16.76, 34];\n\nvar rates = {\n  USD: 1, // Default rate\n  EUR: 0.87,\n  JPY: 106.98,\n  GBP: 0.80\n}\n\nvar symbols = {\n  USD: \"$\", // Default symbol\n  EUR: \"€\",\n  JPY: \"¥\",\n  GBP: \"£\"\n}\n\nvar emojis = [\"💌\", \"🥕\", \"☕\", \"💸\", \"🙏\", \"🏠\", \"🍕\", \"💃\"]\n\n// Update emojis\nfunction updateEmoji(emoji) {\n  var elements = document.getElementsByClassName(\"message\");\n\n  emojis.forEach((emoji, index) => {\n    elements[index].insertAdjacentHTML(\"beforeend\", ' ' + emoji);\n  });\n}\n\n// Update prices\nfunction updatePrices(rate) {\n  var elements = document.getElementsByClassName(\"price\");\n\n  prices.forEach((price, index) => {\n    elements[index].innerHTML = (price * rate).toFixed(2);\n  });\n}\n\n// Update symbols\n// See also: https://docs.microsoft.com/en-us/globalization/locale/currency-formatting\nfunction updateSymbols(symbol) {\n  var elements = document.getElementsByClassName(\"price\");\n\n  prices.forEach((price, index) => {\n    if (symbol !== \"€\") {\n      elements[index].insertAdjacentHTML(\"afterbegin\", symbol);\n    } else {\n      elements[index].insertAdjacentHTML(\"beforeend\", symbol);\n    }\n  });\n}\n\nclass Receipts extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rates: \"$\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Initial prices\n    updatePrices(rates.USD);\n    // Initial symbols\n    updateSymbols(symbols.USD);\n\n    // On mobile or macOS only -- to avoid emoji issues in early Windows variants\n    if (/Android|webOS|Mac|iPhone|iPad|iPod|Opera Mini/i.test(navigator.userAgent)) {\n      // Add emojis to spice things up\n      updateEmoji(emojis);\n    }\n\n  }\n\n  handleChange(e) {\n    // Update prices by currency\n    updatePrices(rates[e.target.value]);\n\n    // Update currency symbol\n    updateSymbols(symbols[e.target.value]);\n\n    // Update state with active currency\n    this.setState({\n      rates: symbols[e.target.value]\n    })\n  }\n\n  render() {\n\n    const { t } = this.props;\n\n    return (\n      <div id=\"receiptsContainer\" className=\"justify-content-center\">\n        <Row className=\"justify-content-center\">\n          <ListGroup horizontal id=\"selector\" onClick={this.handleChange}>\n            <ListGroup.Item value=\"USD\" className={this.state.rates === \"$\" ? \"active\" : null} action>$</ListGroup.Item>\n            <ListGroup.Item value=\"GBP\" className={this.state.rates === \"£\" ? \"active\" : null} action>£</ListGroup.Item>\n            <ListGroup.Item value=\"EUR\" className={this.state.rates === \"€\" ? \"active\" : null} action>€</ListGroup.Item>\n            <ListGroup.Item value=\"JPY\" className={this.state.rates === \"¥\" ? \"active\" : null} action>¥</ListGroup.Item>\n          </ListGroup>\n        </Row>\n\n        {this.props.receipts.map((receipt, i) => (\n          <Card style={{ \"--animation-order\": i }} className=\"toast\" key={i}>\n            <Card.Subtitle>\n              {/* Real fake names to protect the innocent via Venmo public API */}\n              <strong>{receipt.actor.firstname}</strong> {t('paid')}\n              <strong> {receipt.transactions[0].target.firstname} </strong>\n              {/* Fake cash monies for demo purposes */}\n              <span className=\"alert-success price\">\n              </span>\n            </Card.Subtitle>\n            <Card.Body className=\"message\">\n              {receipt.message}\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n\n    )\n  }\n}\n\nexport default withTranslation()(Receipts);","import React from 'react';\nimport './App.css';\nimport Receipts from './components/receipts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { withTranslation, Trans } from 'react-i18next';\n\nclass App extends React.Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      receipts: [],\n      loading: true,\n    }\n  }\n\n  componentDidMount() {\n    // Private whitelist-restricted Heroku deployment of \"CORS Anywhere\"\n    fetch('https://hdehal-cors.herokuapp.com/https://venmo.com/api/v5/public')\n      .then(res => res.json())\n      .then((data) => {\n        // Last 8 records into state only\n        this.setState({ receipts: data.data.slice(0, 8), loading: false })\n      })\n      .catch(function (err) {\n        console.log('Fetch Error :-S', err);\n      })\n  }\n\n  render() {\n\n    const { i18n } = this.props;\n\n    const currentLang = (Array.isArray(i18n.languages)) ? i18n.languages[0] : i18n.languages;\n\n    const changeLanguage = (lng) => {\n      i18n.changeLanguage(lng);\n    };\n\n    return (\n      <div className=\"App\">\n\n        <Container fluid>\n          <Row className=\"justify-content-center\">\n            <Col>\n              <h5><Trans i18nKey=\"heading\"></Trans></h5>\n              <Row className=\"justify-content-center\">\n                <p>\n                  <Trans i18nKey=\"intro\">\n                    This simple React app uses Venmo API data as a test playground for currency conversion, internationalization (i18n), and accessibility (a11y).\n                  </Trans>\n                  <br />\n                  <a href=\"https://venmo.com/api/v5/public\" target=\"_blank\" rel=\"noopener noreferrer\"><code>https://venmo.com/api/v5/public</code></a>\n                </p>\n              </Row>\n              <Row className=\"justify-content-center\">\n                <ListGroup horizontal>\n                  <ListGroup.Item onClick={() => changeLanguage('en')} action className={currentLang === \"en\" ? \"active\" : null}>EN</ListGroup.Item>\n                  <ListGroup.Item onClick={() => changeLanguage('de')} action className={currentLang === \"de\" ? \"active\" : null}>DE</ListGroup.Item>\n                  <ListGroup.Item onClick={() => changeLanguage('fr')} action className={currentLang === \"fr\" ? \"active\" : null}>FR</ListGroup.Item>\n                  <ListGroup.Item onClick={() => changeLanguage('jp')} action className={currentLang === \"jp\" ? \"active\" : null}>JP</ListGroup.Item>\n                </ListGroup>\n              </Row>\n              {this.state.loading\n                ? <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                : <Receipts receipts={this.state.receipts} i18n={i18n} />}\n            </Col>\n          </Row>\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\nimport App from './App';\n\nReactDOM.render(\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}